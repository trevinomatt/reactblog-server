service:
  name: reactlog-v2-backend

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  stage: dev

  environment:
    TYPEORM_CONNECTION: postgres
    TYPEORM_HOST: ${ssm:/reactlog-v2/rds-host}
    TYPEORM_USERNAME: reactlog
    TYPEORM_DATABASE: reactlog
    TYPEORM_PORT: 5432
    TYPEORM_SYNCHRONIZE: false
    TYPEORM_LOGGING: false
    GITHUB_ID: 7c3902d881910d52ae3e
    GITHUB_SECRET: ${ssm:/velog-v2/github-secret}
    FACEBOOK_ID: 203040656938507
    FACEBOOK_SECRET: ${ssm:/velog-v2/facebook-secret}
    GOOGLE_ID: 512153499356-4sg3s216vvqiv5kjfstal7dd2c1gc1an.apps.googleusercontent.com
    GOOGLE_SECRET: ${ssm:/reactlog-v2/google-secret}
    HASH_KEY: ${ssm:/reactlog-v2/hash-key}
    API_HOST: ${env:API_HOST}
    CLIENT_HOST: ${env:CLIENT_HOST}
    SERVERLESS: true
    ES_HOST: ${ssm:/reactlog-v2/es-host}
    REDIS_HOST: ${ssm:/reactlog-v2/redis-host}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
        - ssm:GetParametersByPath
      Resource:
        Fn::Join:
          - ''
          -
            - 'arn:aws:ssm:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':parameter/reactlog-v2/*'
    - Effect: Allow
      Action:
        - 'ses:SendEmail'
      Resource:
        - 'arn:aws:ses:us-east-1:550209488018:identity/reactlog.io'
      Effect: Allow
      Action:
        - s3:*
      Resource:
        - "arn:aws:s3:::s3.images.reactlog.io"
        - "arn:aws:s3:::s3.images.reactlog.io/*"

  vpc:
    securityGroupIds:
      - sg-f588c99d
    subnetIds:
      - subnet-02c6112f71f5148c7
      - subnet-0ebc43e6ab298c646

functions:
  app:
    handler: src/serverless.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{any+}
          method: ANY

custom:
  webpack:
    includeModules: true
